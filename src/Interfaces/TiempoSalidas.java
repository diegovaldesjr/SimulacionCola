/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import Modelo.Tiempo;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Diego Valdes
 */
public class TiempoSalidas extends javax.swing.JFrame {

     private ArrayList tiempoSalidas;
     private Parametros p;
    /**
     * Creates new form TiempoSalidas
     */
    public TiempoSalidas(Parametros p, int nEstacion) {
        initComponents();
        this.setLocationRelativeTo(null);
        
        tiempoSalidas = null;
        this.p = p;
        
        jLabelSalidas.setText(jLabelSalidas.getText()+nEstacion);
        
        initTablas();
    }
    
    public void initTablas(){
        DefaultTableModel modelSalida = new DefaultTableModel();
        modelSalida.addColumn("Tiempo");
        modelSalida.addColumn("Probabilidad");

        this.jTableSalidas.setModel(modelSalida);
    }

    public ArrayList getTiempoSalidas() {
        return tiempoSalidas;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelSalidas = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSalidas = new javax.swing.JTable();
        jLabelTiempoLlegadas = new javax.swing.JLabel();
        jTextFieldTiempoSalidas = new javax.swing.JTextField();
        jTextFieldProbSalidas = new javax.swing.JTextField();
        jLabelProbabilidadLlegadas = new javax.swing.JLabel();
        jButtonAgregarTiempoSalida = new javax.swing.JButton();
        jButtonEliminarProbSalida = new javax.swing.JButton();
        jButtonGuardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelSalidas.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelSalidas.setText("Tiempo entre salidas estacion ");

        jTableSalidas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableSalidas);

        jLabelTiempoLlegadas.setText("Tiempo");

        jTextFieldTiempoSalidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTiempoSalidasActionPerformed(evt);
            }
        });

        jTextFieldProbSalidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldProbSalidasActionPerformed(evt);
            }
        });

        jLabelProbabilidadLlegadas.setText("Probabilidad");

        jButtonAgregarTiempoSalida.setText("Agregar");
        jButtonAgregarTiempoSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarTiempoSalidaActionPerformed(evt);
            }
        });

        jButtonEliminarProbSalida.setText("Eliminar");
        jButtonEliminarProbSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarProbSalidaActionPerformed(evt);
            }
        });

        jButtonGuardar.setBackground(new java.awt.Color(0, 102, 0));
        jButtonGuardar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonGuardar.setText("Aceptar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSalidas)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelProbabilidadLlegadas)
                                    .addComponent(jLabelTiempoLlegadas))
                                .addGap(74, 74, 74)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldTiempoSalidas, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldProbSalidas, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButtonGuardar)
                                .addComponent(jButtonAgregarTiempoSalida))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonEliminarProbSalida))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelSalidas)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelTiempoLlegadas)
                        .addGap(30, 30, 30)
                        .addComponent(jLabelProbabilidadLlegadas))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextFieldTiempoSalidas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldProbSalidas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonAgregarTiempoSalida)
                            .addComponent(jButtonEliminarProbSalida))))
                .addGap(18, 18, 18)
                .addComponent(jButtonGuardar)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldTiempoSalidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTiempoSalidasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTiempoSalidasActionPerformed

    private void jTextFieldProbSalidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldProbSalidasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldProbSalidasActionPerformed

    private void jButtonAgregarTiempoSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarTiempoSalidaActionPerformed

        if(jTextFieldTiempoSalidas.getText().equals("") || jTextFieldProbSalidas.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Los parametros no pueden estas vacios");
        }else{
            try{
                int tiempo = Integer.parseInt(jTextFieldTiempoSalidas.getText());
                float probabilidad = Float.parseFloat(jTextFieldProbSalidas.getText());
                
                if(tiempo > 0 && probabilidad > 0){
                    String[] salida = {String.valueOf(tiempo), String.valueOf(probabilidad)};

                    DefaultTableModel model = (DefaultTableModel) this.jTableSalidas.getModel();
                    model.addRow(salida);
                }else{
                    JOptionPane.showMessageDialog(this, "Solo se admiten valores positivos");
                }
      
            }catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(this, "Solo se admiten valores numericos");
            }
        }
    }//GEN-LAST:event_jButtonAgregarTiempoSalidaActionPerformed

    private void jButtonEliminarProbSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarProbSalidaActionPerformed

        int filaSelect = jTableSalidas.getSelectedRow();

        if(filaSelect >= 0){
            DefaultTableModel model = (DefaultTableModel) this.jTableSalidas.getModel();
            model.removeRow(filaSelect);
        }else{
            JOptionPane.showMessageDialog(this, "Seleccione una fila de la tabla");
        }
    }//GEN-LAST:event_jButtonEliminarProbSalidaActionPerformed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed

        try{
            float cont = 0; 
            for(int i=0; i<jTableSalidas.getRowCount(); i++){
                cont += Float.parseFloat(jTableSalidas.getValueAt(i, 1).toString());
            }

            if(cont == 1){
                //Empezar a tomar valores de las estaciones

                tiempoSalidas = new ArrayList<Tiempo>();

                for(int i=0; i<jTableSalidas.getRowCount(); i++){
                    tiempoSalidas.add(new Tiempo(Integer.parseInt(jTableSalidas.getValueAt(i, 0).toString()),
                        Float.parseFloat(jTableSalidas.getValueAt(i, 1).toString())));
                }

                p.addTiempoSalida(tiempoSalidas);
                this.dispose();

            }else{
                JOptionPane.showMessageDialog(this, "La suma de las probabilidades debe ser igual a 1.");
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(this, "Solo se admiten valores numericos");
        }
    }//GEN-LAST:event_jButtonGuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAgregarTiempoSalida;
    private javax.swing.JButton jButtonEliminarProbSalida;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JLabel jLabelProbabilidadLlegadas;
    private javax.swing.JLabel jLabelSalidas;
    private javax.swing.JLabel jLabelTiempoLlegadas;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableSalidas;
    private javax.swing.JTextField jTextFieldProbSalidas;
    private javax.swing.JTextField jTextFieldTiempoSalidas;
    // End of variables declaration//GEN-END:variables
}
